{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createHistory","fetchStream","id","dispatch","a","streams","get","res","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","history","push","connect","getState","userId","auth","post","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","renderAction","deleteStream","to","renderContent","delete","StreamList","renderAdmin","currentUserId","renderList","map","key","renderCreate","isSignedIn","style","textAlign","fetchStreams","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","console","log","flv","createPlayer","url","attachMediaElement","current","load","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.53ec0ceb.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n});","// We maintain the history object instead of letting ReactRouter doing so we can easily do Programatic Routing\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();","\r\n\r\nimport {\r\n    SIGN_IN, \r\n    SIGN_OUT, \r\n    CREATE_STREAM,\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    DELETE_STREAM,\r\n    EDIT_STREAM\r\n} from './types';\r\nimport streams from '../apis/streams';\r\nimport history from '../history';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const res = await streams.post('/streams', { ...formValues, userId });\r\n    dispatch({\r\n        type: CREATE_STREAM,\r\n        payload: res.data\r\n    });\r\n    \r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const res = await streams.get('/streams');\r\n    dispatch({\r\n        type: FETCH_STREAMS,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const res = await streams.get(`/streams/${id}`);\r\n    dispatch({\r\n        type: FETCH_STREAM,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const res = await streams.patch(`/streams/${id}`, formValues);\r\n    dispatch({\r\n        type: EDIT_STREAM,\r\n        payload: res.data\r\n    });\r\n    history.push('/');   \r\n};\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n    await streams.delete(`/streams/${id}`);\r\n    dispatch({\r\n        type: DELETE_STREAM,\r\n        payload: id\r\n    });\r\n    history.push('/');\r\n};","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM = 'EDIT_STREAM';","import React from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n    renderError({ error, touched }) {\r\n        if (touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n                <Field \r\n                    name=\"title\" \r\n                    component={this.renderInput} \r\n                    label=\"Enter Title\" \r\n                />\r\n                <Field \r\n                    name=\"description\" \r\n                    component={this.renderInput}\r\n                     label=\"Enter Description\" \r\n                />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'You must enter a title';\r\n    }\r\n\r\n    if (!formValues.description) {\r\n        errors.description = 'You must enter a description';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: 'streamForm',\r\n    validate\r\n})(StreamForm);\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createStream } from '../../actions'\r\nimport StreamForm from './StreamForm';\r\nimport history from '../../history';\r\n\r\nclass StreamCreate extends React.Component {\r\n    onSubmit = async (formValues) => {\r\n        await this.props.createStream(formValues);\r\n        history.push('/');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create A Stream</h3>\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { createStream })(StreamCreate);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.editStream(this.props.match.params.id, formValues);\r\n    };\r\n    \r\n    render() {\r\n        if (!this.props.stream) {\r\n            return (\r\n                <div>\r\n                    Loading ...\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    Edit a Stream\r\n                </h3>\r\n                <StreamForm \r\n                    //initialValues={this.props.stream} This work because stream is an object with a title and description to match the form but this will create excessive data\r\n                    initialValues={_.pick(this.props.stream, 'title', 'description')} \r\n                    onSubmit={this.onSubmit} \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream, editStream }\r\n)(StreamEdit);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ui dimmer modals visible active\" onClick={props.onDismiss}>\r\n            <div className=\"ui standard modal visible active\" onClick={(e) => e.stopPropagation()}>\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">\r\n                    {props.content}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../actions';\r\n\r\nclass StreamDelete extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    renderAction = () => {\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <>\r\n                <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\r\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\r\n            </>\r\n        );\r\n    };\r\n\r\n    renderContent = () => {\r\n        if (!this.props.stream) {\r\n            return 'Are you sure you want to delete this stream?';\r\n        }\r\n        return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\r\n    };\r\n    \r\n    render () {\r\n        return (\r\n            <Modal \r\n                title=\"Delete Stream\"\r\n                content={this.renderContent()}\r\n                actions={this.renderAction()}\r\n                onDismiss={() => history.push('/')}\r\n            />\r\n        ); \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream, deleteStream }\r\n)(StreamDelete);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin = (stream) => {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <Link className=\"ui button primary\" to={`/streams/edit/${stream.id}`}>\r\n                        Edit\r\n                    </Link>\r\n                    <Link className=\"ui button negative\" to={`/streams/delete/${stream.id}`}>\r\n                        Delete\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderList = () => {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                            {stream.title}\r\n                        </Link>\r\n                        <div className=\"description\">\r\n                            {stream.description}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    renderCreate = () => {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\r\n                        Create Stream\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">\r\n                    {this.renderList()}\r\n                </div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport flv from 'flv.js';\r\n\r\nimport { fetchStream } from '../../actions';\r\n\r\nclass StreamShow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.player.destroy();\r\n    }\r\n\r\n    buildPlayer() {\r\n        if (this.player || !this.props.stream) {\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        console.log(id);\r\n        this.player = flv.createPlayer({\r\n            type: 'flv',\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        });\r\n        this.player.attachMediaElement(this.videoRef.current);\r\n        this.player.load();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return (\r\n                <div>Loading...</div>\r\n            );\r\n        }\r\n\r\n        const { title, description } = this.props.stream;\r\n\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{ width: '100%' }} controls={true}/>\r\n                <h1>{title}</h1>\r\n                <h5>{description}</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream }\r\n)(StreamShow);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '313671474862-50ml50tjcqt3kiovd4mr1n3qtia03jc6.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        } else {\r\n            this.props.signOut();\r\n        }\r\n    };\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    };\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    };\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if (this.props.isSignedIn) {\r\n            return (\r\n                <button className=\"ui red google button\" onClick={this.onSignOutClick}>\r\n                    <i className=\"google icon\" />\r\n                    Sign out\r\n                </button>\r\n            );\r\n        } else {\r\n            return (\r\n                <button className=\"ui red google button\" onClick={this.onSignInClick}>\r\n                    <i className=\"google icon\" />\r\n                    Sign In with Google\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.renderAuthButton() }\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut})(GoogleAuth);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"item\">\r\n                    Streamy\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All Streams\r\n                </Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <Router history={history}>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={StreamList} />\r\n                        <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n                        <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n                        <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n                        <Route path=\"/streams/:id\" exact component={StreamShow} />\r\n                    </Switch>\r\n                </div>  \r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userId: action.payload };\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userId: null };\r\n        default:    \r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n});","import _ from 'lodash';\r\n\r\nimport {\r\n    FETCH_STREAMS,\r\n    FETCH_STREAM,\r\n    CREATE_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAMS:\r\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n        case FETCH_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_STREAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport  reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}