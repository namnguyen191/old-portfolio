{"version":3,"sources":["actions/index.js","actions/types.js","components/Payment.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payment","name","description","amount","props","stripeKey","process","className","React","Component","connect","actions","Header","renderContent","auth","href","key","style","margin","credits","to","this","Landing","textAlign","DashBoard","SurveyNew","App","path","component","exact","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector","console","log"],"mappings":"8ZAIaA,EAAY,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACTC,IAAMC,IAAI,qBADD,OACrBC,EADqB,OAE3BJ,EAAS,CACLK,KCPkB,aDQlBC,QAASF,EAAIG,OAJU,2CAAN,uDAQZC,EAAc,SAACC,GAAD,8CAAW,WAAOT,GAAP,eAAAC,EAAA,sEAChBC,IAAMQ,KAAK,cAAeD,GADV,OAC5BL,EAD4B,OAGlCJ,EAAS,CACLK,KChBkB,aDiBlBC,QAASF,EAAIG,OALiB,2CAAX,uDENrBI,E,uKACQ,IAAD,OACL,OACI,kBAAC,IAAD,CACIC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRL,MAAO,SAACA,GAAD,OAAW,EAAKM,MAAMP,YAAYC,IACzCO,UAAWC,8CAEX,4BAAQC,UAAU,OAAlB,oB,GAVMC,IAAMC,WAgBbC,cAAQ,KAAMC,EAAdD,CAAuBV,GChBhCY,E,4MACFC,cAAgB,WACZ,OAAQ,EAAKT,MAAMU,MACf,KAAK,KACD,OACJ,KAAK,EACD,OACI,4BACI,uBAAGC,KAAK,gBAAR,sBAGZ,QAEI,OACI,oCACI,wBAAIC,IAAI,KACJ,kBAAC,EAAD,OAEJ,wBAAIA,IAAI,IAAIC,MAAO,CAAEC,OAAQ,WAA7B,YACe,EAAKd,MAAMU,KAAKK,SAE/B,wBAAIH,IAAI,KACJ,uBAAGD,KAAK,eAAR,c,uDAQpB,OACI,6BACI,yBAAKR,UAAU,eAGX,kBAAC,IAAD,CACIa,GAAIC,KAAKjB,MAAMU,KAAO,WAAa,IACnCP,UAAU,cAFd,UAMA,wBAAIA,UAAU,SAASc,KAAKR,uB,GAzC3BL,IAAMC,WAsDZC,eANS,SAAC,GACrB,MAAO,CACHI,KAF8B,EAAXA,QAMZJ,CAAyBE,GC/CzBU,EAXC,WACZ,OACI,yBAAKL,MAAO,CAACM,UAAW,WACpB,uCAGA,iECANC,EAAY,WACd,OAAO,0CAGLC,EAAY,WACd,OAAO,0CAGLC,E,kLAEEL,KAAKjB,MAAMhB,c,+BAIX,OACI,yBAAKmB,UAAU,aACX,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOoB,KAAK,IAAIC,UAAWN,EAASO,OAAK,IACzC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWJ,EAAWK,OAAK,IAClD,kBAAC,IAAD,CACIF,KAAK,eACLC,UAAWH,EACXI,OAAK,W,GAhBfrB,IAAMC,WAyBTC,cAAQ,KAAMC,EAAdD,CAAuBgB,GCrCvBI,cAAgB,CAC3BhB,KCHW,WAA2B,IAA1BiB,EAAyB,uDAAjB,KAAMC,EAAW,uCACrC,OAAQA,EAAOtC,MACX,INJkB,aMKd,OAAOsC,EAAOrC,UAAW,EAC7B,QACI,OAAOoC,MCIbE,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,UAG3BC,QAAQC,IAAI,kBAAmBrC,8CAC/BoC,QAAQC,IAAI,mBAAoBrC,gB","file":"static/js/main.99820530.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport { FETCH_USER } from './types';\r\n\r\nexport const fetchUser = () => async (dispatch) => {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({\r\n        type: FETCH_USER,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\nexport const handleToken = (token) => async (dispatch) => {\r\n    const res = await axios.post('/api/stripe', token);\r\n\r\n    dispatch({\r\n        type: FETCH_USER,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\n// TODO: Refractor log out to use Redux instead\r\n","export const FETCH_USER = 'fetch_user';","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../actions';\r\n\r\nclass Payment extends React.Component {\r\n    render() {\r\n        return (\r\n            <StripeCheckout\r\n                name=\"Sirvey\"\r\n                description=\"$5 for 5 email credits\"\r\n                amount={500}\r\n                token={(token) => this.props.handleToken(token)}\r\n                stripeKey={process.env.REACT_APP_STRIPE_PUBLIC_KEY}\r\n            >\r\n                <button className=\"btn\">Add Credits</button>\r\n            </StripeCheckout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(Payment);\r\n\r\n//TODO Create your own Stripe checkout component\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Payment from './Payment';\r\n\r\nclass Header extends React.Component {\r\n    renderContent = () => {\r\n        switch (this.props.auth) {\r\n            case null: // Loading\r\n                return;\r\n            case false: // Log out\r\n                return (\r\n                    <li>\r\n                        <a href=\"/auth/google\">Login with Google</a>\r\n                    </li>\r\n                );\r\n            default:\r\n                // Log in\r\n                return (\r\n                    <>\r\n                        <li key=\"1\">\r\n                            <Payment />\r\n                        </li>\r\n                        <li key=\"3\" style={{ margin: '0 10px' }}>\r\n                            Credits: { this.props.auth.credits }\r\n                        </li>\r\n                        <li key=\"2\">\r\n                            <a href=\"/api/logout\">Logout</a>\r\n                        </li>\r\n                    </>\r\n                );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    {/* Link tag is for navigating to the same page, a tag is for\r\n                    navigating to a different document */}\r\n                    <Link\r\n                        to={this.props.auth ? '/surveys' : '/'}\r\n                        className=\"brand-logo\"\r\n                    >\r\n                        Sirvey\r\n                    </Link>\r\n                    <ul className=\"right\">{this.renderContent()}</ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n    return {\r\n        auth\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <h1>\r\n                Sirvey!\r\n            </h1>\r\n            <p>Collect feedback from your users</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from './Header';\r\nimport Landing from './Landing';\r\nimport * as actions from '../actions';\r\n\r\nconst DashBoard = () => {\r\n    return <h2>DashBoard</h2>;\r\n};\r\n\r\nconst SurveyNew = () => {\r\n    return <h2>SurveyNew</h2>;\r\n};\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <Header />\r\n                        <Route path=\"/\" component={Landing} exact />\r\n                        <Route path=\"/surveys\" component={DashBoard} exact />\r\n                        <Route\r\n                            path=\"/surveys/new\"\r\n                            component={SurveyNew}\r\n                            exact\r\n                        />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, actions)(App);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});\r\n","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default (state = null, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import 'materialize-css/dist/css/materialize.min.css';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n\r\nconsole.log('STRIPE KEY IS: ', process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\nconsole.log('Environment is: ', process.env.NODE_ENV);\r\n"],"sourceRoot":""}